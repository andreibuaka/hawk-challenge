plugins {
    id 'application'
    id 'java'
    id 'checkstyle'
    id 'jacoco'
}

group = 'com.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // Logging Facade (SLF4j) and Implementation (Logback)
    implementation 'org.slf4j:slf4j-api:1.7.32' // Use a stable 1.7.x version for broad compatibility or 2.x
    implementation 'ch.qos.logback:logback-classic:1.2.10' // Match SLF4j 1.7.x
}

application {
    mainClass = 'com.example.HelloWorld'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

checkstyle {
    toolVersion = '8.45.1'
    configFile = file("${project.rootDir}/config/checkstyle.xml")
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.4 // Minimum 40% coverage
            }
        }
    }
}

// Ensure check runs after test
check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport

jar {
    manifest {
        attributes 'Main-Class': 'com.example.HelloWorld'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
